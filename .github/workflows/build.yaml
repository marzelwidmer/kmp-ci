name: Desktop MacOS Testflight Release
#on:
#  push:
#    tags:
#      - '*-desktop'
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  deploy:
    runs-on: macos-14
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 18

      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Cache KMP tooling
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-v1-${{ hashFiles('*.versions.toml') }}

#      - name: Import Mac App Distribution and Installer certificate
#        uses: apple-actions/import-codesign-certs@v2
#        with:
#          p12-file-base64: ${{ secrets.MAC_APP_DISTRIBUTION_INSTALLER_CERTIFICATE }}
#          p12-password: ${{ secrets.MAC_APP_DISTRIBUTION_INSTALLER_CERTIFICATE_PWD }}

#      - name: Create Embedded Provision Profile
#        run: |
#          echo "$EMBEDDED_PROVISION" > desktopApp/embedded.provisionprofile.b64
#          base64 -d -i desktopApp/embedded.provisionprofile.b64 > desktopApp/embedded.provisionprofile
#        env:
#          EMBEDDED_PROVISION: ${{ secrets.EMBEDDED_PROVISION }}

#      - name: Create Runtime Provision Profile
#        run: |
#          echo "$RUNTIME_PROVISION" > desktopApp/runtime.provisionprofile.b64
#          base64 -d -i desktopApp/runtime.provisionprofile.b64 > desktopApp/runtime.provisionprofile
#        env:
#          RUNTIME_PROVISION: ${{ secrets.RUNTIME_PROVISION }}

#      - name: Create path variables
#        id: path_variables
#        run: |
#          tag=$(git describe --tags --abbrev=0 --match "*-desktop")
#          version=$(echo "$tag" | sed 's/-desktop$//')
#          name="FeedFlow-${version}.pkg"
#          path="desktopApp/build/release/main-release/pkg/${name}"
#          echo "TAG=$tag" >> $GITHUB_ENV
#          echo "VERSION=$version" >> $GITHUB_ENV
#          echo "RELEASE_PATH=$path" >> $GITHUB_ENV

      - name: Create PKG
        run: ./gradlew packageDmg

#      - uses: Apple-Actions/upload-testflight-build@v1
#        with:
#          app-type: 'osx'
#          app-path: ${{ steps.path_variables.outputs.RELEASE_PATH }}
#          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
#          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
#          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
